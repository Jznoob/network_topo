"""
Django settings for tuopuhuanyuan project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@rrxlshi2w#1ezq0k+pg$imu5@9)a05dfaj7ze00^xpsd_y90t'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 自定义应用
    'index',
    'user_auth',
    'config',
    'history',
    'topology',
    # 第三方应用
    'captcha',
    'rest_framework',
    'corsheaders',
    'rest_framework_simplejwt.token_blacklist',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

ROOT_URLCONF = 'tuopuhuanyuan.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tuopuhuanyuan.wsgi.application'

# CORS 配置
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:5500",
    "http://localhost:5500",
]
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]

# CSRF 配置
CSRF_TRUSTED_ORIGINS = [
    "http://127.0.0.1:5500",
    "http://localhost:5500",
]
CSRF_COOKIE_SAMESITE = 'Lax'
CSRF_COOKIE_HTTPONLY = False  # 允许 JavaScript 访问 CSRF cookie
CSRF_USE_SESSIONS = False
CSRF_COOKIE_NAME = 'csrftoken'

# Session 配置
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_HTTPONLY = True

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'tuopu_db',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'frontend/html'),
]

# 确保在开发环境中提供静态文件
if DEBUG:
    STATICFILES_DIRS = [
        os.path.join(BASE_DIR, 'static'),
    ]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 登录相关配置
LOGIN_URL = '/auth/login/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/auth/login/'

# Session配置
SESSION_COOKIE_AGE = 86400  # 24小时
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# CSRF配置
CSRF_COOKIE_SECURE = False  # 开发环境设为False，生产环境设为True
CSRF_COOKIE_HTTPONLY = True

# 安全配置
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

# Captcha配置
CAPTCHA_LENGTH = 4  # 验证码长度
CAPTCHA_TIMEOUT = 1  # 验证码过期时间（分钟）
CAPTCHA_IMAGE_SIZE = (100, 30)  # 验证码图片大小
CAPTCHA_FONT_SIZE = 28  # 验证码字体大小
CAPTCHA_BACKGROUND_COLOR = '#ffffff'  # 验证码背景颜色
CAPTCHA_FOREGROUND_COLOR = '#001a33'  # 验证码前景颜色
CAPTCHA_NOISE_FUNCTIONS = ('captcha.helpers.noise_dots',)  # 验证码噪点函数
CAPTCHA_CHALLENGE_FUNCT = 'captcha.helpers.math_challenge'  # 验证码生成函数
CAPTCHA_IMAGE_TEMPLATE = 'captcha/image.html'  # 验证码图片模板
CAPTCHA_FIELD_TEMPLATE = 'captcha/field.html'  # 验证码字段模板
CAPTCHA_DICTIONARY_MIN_LENGTH = 2  # 验证码字典最小长度
CAPTCHA_DICTIONARY_MAX_LENGTH = 4  # 验证码字典最大长度
CAPTCHA_PUNCTUATION = ''  # 验证码标点符号
CAPTCHA_FLITE_PATH = None  # 语音验证码路径
CAPTCHA_SOFTWARE_PATH = None  # 语音验证码软件路径
CAPTCHA_HIDDEN_FIELD_TEMPLATE = 'captcha/hidden_field.html'  # 隐藏字段模板
CAPTCHA_TEXT_FIELD_TEMPLATE = 'captcha/text_field.html'  # 文本字段模板
CAPTCHA_DEFAULT_FONT = 'captcha/fonts/Vera.ttf'  # 默认字体
CAPTCHA_FONT_PATH = None  # 字体路径
CAPTCHA_IMAGE_SIZE_BEFORE_CROPPING = None  # 裁剪前图片大小
CAPTCHA_MATH_CHALLENGE_OPERATOR = '+'  # 数学验证码运算符
CAPTCHA_MATH_CHALLENGE_MIN = 1  # 数学验证码最小值
CAPTCHA_MATH_CHALLENGE_MAX = 10  # 数学验证码最大值

# REST Framework 配置
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser'
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}


# 邮箱配置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 465
EMAIL_USE_SSL = True
EMAIL_HOST_USER = 'wenhanfan11@gmail.com'
EMAIL_HOST_PASSWORD = 'biwbrdqnyjaeyvib'  # 注意：不是邮箱密码，是 QQ 邮箱生成的"授权码"
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
}